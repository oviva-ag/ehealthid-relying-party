name: Build and Publish a tagged Application Image

on:
  push:
    tags:
      - 'ehealthid-relying-party/v[0-9]+.[0-9]+.[0-9]+-[a-z]+.[0-9]+'

env:
  REGISTRY: ghcr.io

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'
      - name: Get version
        id: version
        run: |
          echo "parsing version from ref '$GITHUB_REF'"
          VERSION=$(echo "$GITHUB_REF" | sed -e 's|.*/ehealthid-relying-party/v\(.*\)|\1|g')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - id: buildx
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Update Version
        env:
          VERSION: ${{ steps.version.outputs.version }}
        run: |
          echo "updating version to '$VERSION'"
          make update-version "VERSION=$VERSION"
      - name: Build and push Image
        env:
          VERSION: ${{ steps.version.outputs.version }}
        run: |
          make dist RELEASE_TAG=v$VERSION
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          draft: false
          prerelease: false
          release_name: Release v${{ steps.version.outputs.version }}
          body: |
            Docker image: `ghcr.io/oviva-ag/ehealthid-relying-party:v${{ steps.version.outputs.version }}`
      - name: Upload CLI Asset
        id: upload-release-asset-cli
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ehealthid-cli/target/ehealthidcli.jar
          asset_name: ehealthidcli.jar
          asset_content_type: application/java-archive
      - name: Upload Server Asset
        id: upload-release-asset-server
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ehealthid-rp/target/ehealthid-rp-jar-with-dependencies.jar
          asset_name: ehealthid-rp.jar
          asset_content_type: application/java-archive